<?xml version="1.0" ?>
<launch>
  <arg name="camera"              default="camera"/>
  <arg name="tf_prefix"           default="$(arg camera)_camera"/>
  <arg name="manager"             default="realsense2_camera_manager"/>
  <arg name="serial_no"           default=""/>
  <arg name="json_file_path"      default=""/>
  <arg name="width"               default="640"/>
  <arg name="height"              default="360"/>
  <arg name="rgb_channel"         default="infra1"  doc="infra1/color"/>
  <arg name="decimation_value"    default="2"/>

  <arg name="depth_width"         default="$(eval arg('decimation_value') * arg('width'))"/>
  <arg name="depth_height"        default="$(eval arg('decimation_value') * arg('height'))"/>
  <arg name="depth_fps"           default="30"/>
  <arg name="enable_depth"        default="true"/>
  <!-- The value of width and height for depth and infra needs to be same-->
  <arg name="infra_width"         default="$(eval arg('decimation_value') * arg('width'))"/>
  <arg name="infra_height"        default="$(eval arg('decimation_value') * arg('height'))"/>
  <arg name="infra_fps"           default="30"/>
  <arg name="enable_infra1"       default="$(eval arg('rgb_channel')=='infra1')"/>
  <!-- The value of width and height for depth and color need not be same, but we still maintain the size-->
  <arg name="color_width"         default="$(eval arg('decimation_value') * arg('width'))"/>
  <arg name="color_height"        default="$(eval arg('decimation_value') * arg('height'))"/>
  <arg name="color_fps"           default="30"/>
  <arg name="enable_color"        default="$(eval arg('rgb_channel')=='color')"/>
  <!-- Pointcloud value here is intended to used if registering it thru the hardware -->
  <arg name="enable_pointcloud"         default="false"/>
  <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>  <!-- use RS2_STREAM_ANY to avoid using texture -->
  <arg name="pointcloud_texture_index"  default="0"/>
  <arg name="enable_sync"               default="true"/>
  <arg name="align_depth"               default="false"/>
  <arg name="filters"                   default="decimation,disparity"/>
  <arg name="initial_reset"             default="true"/>

  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="realsense2_camera" args="load realsense2_camera/RealSenseNodeFactory $(arg manager)">
    <param name="serial_no"                type="str"  value="$(arg serial_no)"/>
    <param name="json_file_path"           type="str"  value="$(arg json_file_path)"/>
    <param name="rosbag_filename"          type="str"  value=""/>

    <param name="enable_pointcloud"        type="bool" value="$(arg enable_pointcloud)"/>
    <param name="pointcloud_texture_stream" type="str" value="$(arg pointcloud_texture_stream)"/>
    <param name="pointcloud_texture_index"  type="int" value="$(arg pointcloud_texture_index)"/>
    <param name="enable_sync"              type="bool" value="$(arg enable_sync)"/>
    <param name="align_depth"              type="bool" value="$(arg align_depth)"/>

    <param name="fisheye_width"            type="int"  value="0"/>
    <param name="fisheye_height"           type="int"  value="0"/>
    <param name="enable_fisheye"           type="bool" value="false"/>
    <param name="enable_fisheye1"          type="bool" value="false"/>
    <param name="enable_fisheye2"          type="bool" value="false"/>

    <param name="depth_width"              type="int"  value="$(arg depth_width)"/>
    <param name="depth_height"             type="int"  value="$(arg depth_height)"/>
    <param name="enable_depth"             type="bool" value="$(arg enable_depth)"/>

    <param name="color_width"              type="int"  value="$(arg color_width)"/>
    <param name="color_height"             type="int"  value="$(arg color_height)"/>
    <param name="enable_color"             type="bool" value="$(arg enable_color)"/>

    <param name="infra_width"             type="int"  value="$(arg infra_width)"/>
    <param name="infra_height"            type="int"  value="$(arg infra_height)"/>
    <param name="enable_infra1"            type="bool" value="$(arg enable_infra1)"/>
    <param name="enable_infra2"            type="bool" value="false"/>

    <param name="fisheye_fps"              type="int"  value="0"/>
    <param name="depth_fps"                type="int"  value="$(arg depth_fps)"/>
    <param name="infra_fps"                type="int"  value="$(arg infra_fps)"/>
    <param name="color_fps"                type="int"  value="$(arg color_fps)"/>
    <param name="gyro_fps"                 type="int"  value="0"/>
    <param name="accel_fps"                type="int"  value="0"/>
    <param name="enable_gyro"              type="bool" value="false"/>
    <param name="enable_accel"             type="bool" value="false"/>

    <param name="base_frame_id"            type="str"  value="$(arg tf_prefix)_link"/>
    <param name="depth_frame_id"           type="str"  value="$(arg tf_prefix)_depth_frame"/>
    <param name="infra1_frame_id"          type="str"  value="$(arg tf_prefix)_infra1_frame"/>
    <param name="infra2_frame_id"          type="str"  value="$(arg tf_prefix)_infra2_frame"/>
    <param name="color_frame_id"           type="str"  value="$(arg tf_prefix)_color_frame"/>
    <param name="fisheye_frame_id"         type="str"  value="$(arg tf_prefix)_fisheye_frame"/>
    <param name="fisheye1_frame_id"        type="str"  value="$(arg tf_prefix)_fisheye1_frame"/>
    <param name="fisheye2_frame_id"        type="str"  value="$(arg tf_prefix)_fisheye2_frame"/>
    <param name="accel_frame_id"           type="str"  value="$(arg tf_prefix)_accel_frame"/>
    <param name="gyro_frame_id"            type="str"  value="$(arg tf_prefix)_gyro_frame"/>
    <param name="pose_frame_id"            type="str"  value="$(arg tf_prefix)_pose_framez"/>

    <param name="depth_optical_frame_id"    type="str"  value="$(arg tf_prefix)_depth_optical_frame"/>
    <param name="infra1_optical_frame_id"   type="str"  value="$(arg tf_prefix)_infra1_optical_frame"/>
    <param name="infra2_optical_frame_id"   type="str"  value="$(arg tf_prefix)_infra2_optical_frame"/>
    <param name="color_optical_frame_id"    type="str"  value="$(arg tf_prefix)_color_optical_frame"/>
    <param name="fisheye_optical_frame_id"  type="str"  value="$(arg tf_prefix)_fisheye_optical_frame"/>
    <param name="fisheye1_optical_frame_id" type="str"  value="$(arg tf_prefix)_fisheye1_optical_frame"/>
    <param name="fisheye2_optical_frame_id" type="str"  value="$(arg tf_prefix)_fisheye2_optical_frame"/>
    <param name="accel_optical_frame_id"    type="str"  value="$(arg tf_prefix)_accel_optical_frame"/>
    <param name="gyro_optical_frame_id"     type="str"  value="$(arg tf_prefix)_gyro_optical_frame"/>
    <param name="pose_optical_frame_id"     type="str"  value="$(arg tf_prefix)_pose_optical_frame"/>

    <param name="aligned_depth_to_color_frame_id"    type="str"  value="$(arg tf_prefix)_aligned_depth_to_color_frame"/>
    <param name="aligned_depth_to_infra1_frame_id"   type="str"  value="$(arg tf_prefix)_aligned_depth_to_infra1_frame"/>
    <param name="aligned_depth_to_infra2_frame_id"   type="str"  value="$(arg tf_prefix)_aligned_depth_to_infra2_frame"/>
    <param name="aligned_depth_to_fisheye_frame_id"  type="str"  value="$(arg tf_prefix)_aligned_depth_to_fisheye_frame"/>
    <param name="aligned_depth_to_fisheye1_frame_id" type="str"  value="$(arg tf_prefix)_aligned_depth_to_fisheye1_frame"/>
    <param name="aligned_depth_to_fisheye2_frame_id" type="str"  value="$(arg tf_prefix)_aligned_depth_to_fisheye2_frame"/>

    <param name="odom_frame_id"            type="str"  value="$(arg tf_prefix)_odom_frame"/>

    <param name="filters"                  type="str"    value="$(arg filters)"/>
    <param name="clip_distance"            type="double" value="-1"/>
    <param name="linear_accel_cov"         type="double" value="0.01"/>
    <param name="initial_reset"            type="bool"   value="$(arg initial_reset)"/>
    <param name="unite_imu_method"         type="str"    value="none"/>

  </node>

  <!-- Resize the rgb image to match the downsized depth image, after going thru the decimation filter-->
  <node pkg="nodelet" type="nodelet" args="standalone image_proc/resize" name="rgb_resizer">
    <!-- Input -->
    <remap from="image" to="$(arg rgb_channel)/image_rect_raw" if="$(eval arg('rgb_channel')=='infra1')"/>
    <remap from="image" to="$(arg rgb_channel)/image_raw" if="$(eval arg('rgb_channel')=='color')"/>
    <remap from="camera_info" to="$(arg rgb_channel)/camera_info"/>
    <!-- Output -->
    <remap from="rgb_resizer/image" to="rgb/image"/>
    <remap from="rgb_resizer/camera_info" to="rgb/camera_info"/>
    <!-- Scale as per the reduction from the decimation filter -->
    <param name="use_scale" value="1" />
    <param name="scale_width" type="double" value="$(eval 1.0 / arg('decimation_value'))" />
    <param name="scale_height" type="double" value="$(eval 1.0 / arg('decimation_value'))" />
  </node>

  <!-- Register the depth image with the rgb image -->
  <node pkg="nodelet" type="nodelet" name="register_depth" args="load depth_image_proc/register $(arg manager)">
    <!-- Input -->
    <!-- : rgb/camera_info -->
    <!-- : depth/camera_info -->
    <remap from="depth/image_rect"            to="depth/image_rect_raw" />
    <!-- Output -->
    <remap from="depth_registered/image_rect" to="depth_registered/image_rect_raw" />
  </node>

  <!-- Publish registered XYZRGB point cloud with registered depth image and rgb image -->
  <node pkg="nodelet" type="nodelet" name="points_xyzrgb_sw_registered" args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)">
    <!-- Input -->
    <remap from="rgb/image_rect_color"        to="rgb/image" />
    <!-- : rgb/camera_info -->
    <remap from="depth_registered/image_rect" to="depth_registered/image_rect_raw" />
    <!-- Output -->
    <!-- : depth_registered/points -->
  </node>

</launch>
